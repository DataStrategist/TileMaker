% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tilemaker.R
\name{tileMatrix}
\alias{tileMatrix}
\title{tileMatrix}
\usage{
tileMatrix(df, Tar = 100, Thre.H = 90, Thre.L = 50, cols = 4, Title,
  FileName, RoundVal = 1, ButtWidth = 100)
}
\arguments{
\item{df}{Dataframe containing information to use. It expects either 2 columns}

\item{Tar}{Target value (What's the highest value to compare against). Defaults to 100}

\item{Thre.H}{The limit between "high" and "medium" values IN PERCENT. Defaults to 90}

\item{Thre.L}{The limit between "medium" and "low" values IN PERCENT. Defaults to 50}

\item{cols}{Number of columns that the matrix should tile around. Defaults to 4}

\item{Title}{The title the matrix should have.}

\item{FileName}{The filename that will contain the html}

\item{RoundVal}{Number of decimals that Value will be rounded to. Defaults to 1}

\item{ButtWidth}{The width of each button element, in Number of pixels. Defaults to 100.}
}
\value{
Returns an HTML object containing the matrix of buttons
}
\description{
Create a matrix of buttons suitable for quick comparisons
}
\examples{
library(dplyr)
df <- iris \%>\% group_by(Species) \%>\% summarize(c=mean(Sepal.Length),p=median(Sepal.Length))
tileMatrix(df,Tar=7,Thre.H=90,Thre.L=80,FileName="matrixTest.html",Title="", ButtWidth=200)
# @importFrom dplyr \%>\%
}
